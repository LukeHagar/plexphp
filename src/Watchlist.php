<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API;

class Watchlist
{
    public const GET_WATCHLIST_SERVERS = [
        /** The plex metadata provider server */
        'https://metadata.provider.plex.tv',
    ];
    private SDKConfiguration $sdkConfiguration;

    /**
     * @param  SDKConfiguration  $sdkConfig
     */
    public function __construct(SDKConfiguration $sdkConfig)
    {
        $this->sdkConfiguration = $sdkConfig;
    }

    /**
     * Get User Watchlist
     *
     * Get User Watchlist
     *
     * @param  \LukeHagar\Plex_API\Models\Operations\GetWatchlistRequest  $request
     * @param  string  $serverURL
     * @return \LukeHagar\Plex_API\Models\Operations\GetWatchlistResponse
     */
    public function getWatchlist(
        ?\LukeHagar\Plex_API\Models\Operations\GetWatchlistRequest $request,
        ?string $serverURL = null,
    ): \LukeHagar\Plex_API\Models\Operations\GetWatchlistResponse {
        $baseUrl = Utils\Utils::templateUrl(Watchlist::GET_WATCHLIST_SERVERS[0], [
        ]);
        if (! empty($serverURL)) {
            $baseUrl = $serverURL;
        }
        $url = Utils\Utils::generateUrl($baseUrl, '/library/sections/watchlist/{filter}', \LukeHagar\Plex_API\Models\Operations\GetWatchlistRequest::class, $request, $this->sdkConfiguration->globals);
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\LukeHagar\Plex_API\Models\Operations\GetWatchlistRequest::class, $request, $this->sdkConfiguration->globals));
        $options['headers']['Accept'] = 'application/json';
        $options['headers']['user-agent'] = $this->sdkConfiguration->userAgent;

        $httpResponse = $this->sdkConfiguration->securityClient->request('GET', $url, $options);
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $statusCode = $httpResponse->getStatusCode();

        $response = new \LukeHagar\Plex_API\Models\Operations\GetWatchlistResponse();
        $response->statusCode = $statusCode;
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->twoHundredApplicationJsonObject = $serializer->deserialize((string) $httpResponse->getBody(), 'LukeHagar\Plex_API\Models\Operations\GetWatchlistResponseBody', 'json');
            }
        } elseif ($httpResponse->getStatusCode() === 400) {
        } elseif ($httpResponse->getStatusCode() === 401) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->fourHundredAndOneApplicationJsonObject = $serializer->deserialize((string) $httpResponse->getBody(), 'LukeHagar\Plex_API\Models\Operations\GetWatchlistWatchlistResponseBody', 'json');
            }
        }

        return $response;
    }
}