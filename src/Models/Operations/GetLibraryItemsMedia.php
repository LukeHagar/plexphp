<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


class GetLibraryItemsMedia
{
    /**
     *
     * @var int $id
     */
    #[\JMS\Serializer\Annotation\SerializedName('id')]
    public int $id;

    /**
     *
     * @var ?int $duration
     */
    #[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $duration = null;

    /**
     *
     * @var ?int $bitrate
     */
    #[\JMS\Serializer\Annotation\SerializedName('bitrate')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $bitrate = null;

    /**
     *
     * @var ?int $width
     */
    #[\JMS\Serializer\Annotation\SerializedName('width')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $width = null;

    /**
     *
     * @var ?int $height
     */
    #[\JMS\Serializer\Annotation\SerializedName('height')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $height = null;

    /**
     *
     * @var ?float $aspectRatio
     */
    #[\JMS\Serializer\Annotation\SerializedName('aspectRatio')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?float $aspectRatio = null;

    /**
     *
     * @var ?string $audioProfile
     */
    #[\JMS\Serializer\Annotation\SerializedName('audioProfile')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $audioProfile = null;

    /**
     *
     * @var ?int $audioChannels
     */
    #[\JMS\Serializer\Annotation\SerializedName('audioChannels')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $audioChannels = null;

    /**
     *
     * @var ?string $audioCodec
     */
    #[\JMS\Serializer\Annotation\SerializedName('audioCodec')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $audioCodec = null;

    /**
     *
     * @var ?string $videoCodec
     */
    #[\JMS\Serializer\Annotation\SerializedName('videoCodec')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $videoCodec = null;

    /**
     *
     * @var ?string $videoResolution
     */
    #[\JMS\Serializer\Annotation\SerializedName('videoResolution')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $videoResolution = null;

    /**
     *
     * @var string $container
     */
    #[\JMS\Serializer\Annotation\SerializedName('container')]
    public string $container;

    /**
     *
     * @var ?string $videoFrameRate
     */
    #[\JMS\Serializer\Annotation\SerializedName('videoFrameRate')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $videoFrameRate = null;

    /**
     *
     * @var ?string $videoProfile
     */
    #[\JMS\Serializer\Annotation\SerializedName('videoProfile')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $videoProfile = null;

    /**
     *
     * @var ?bool $hasVoiceActivity
     */
    #[\JMS\Serializer\Annotation\SerializedName('hasVoiceActivity')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $hasVoiceActivity = null;

    /**
     *
     * @var ?GetLibraryItemsOptimizedForStreaming $optimizedForStreaming
     */
    #[\JMS\Serializer\Annotation\SerializedName('optimizedForStreaming')]
    #[\JMS\Serializer\Annotation\Type('\LukeHagar\Plex_API\Models\Operations\GetLibraryItemsOptimizedForStreaming|null')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?GetLibraryItemsOptimizedForStreaming $optimizedForStreaming = null;

    /**
     *
     * @var ?bool $has64bitOffsets
     */
    #[\JMS\Serializer\Annotation\SerializedName('has64bitOffsets')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $has64bitOffsets = null;

    /**
     * $part
     *
     * @var array<GetLibraryItemsPart> $part
     */
    #[\JMS\Serializer\Annotation\SerializedName('Part')]
    #[\JMS\Serializer\Annotation\Type('array<\LukeHagar\Plex_API\Models\Operations\GetLibraryItemsPart>')]
    public array $part;

    /**
     * @param  int  $id
     * @param  string  $container
     * @param  array<GetLibraryItemsPart>  $part
     * @param  ?int  $duration
     * @param  ?int  $bitrate
     * @param  ?int  $width
     * @param  ?int  $height
     * @param  ?float  $aspectRatio
     * @param  ?string  $audioProfile
     * @param  ?int  $audioChannels
     * @param  ?string  $audioCodec
     * @param  ?string  $videoCodec
     * @param  ?string  $videoResolution
     * @param  ?string  $videoFrameRate
     * @param  ?string  $videoProfile
     * @param  ?bool  $hasVoiceActivity
     * @param  ?GetLibraryItemsOptimizedForStreaming  $optimizedForStreaming
     * @param  ?bool  $has64bitOffsets
     */
    public function __construct(int $id, string $container, array $part, ?int $duration = null, ?int $bitrate = null, ?int $width = null, ?int $height = null, ?float $aspectRatio = null, ?string $audioProfile = null, ?int $audioChannels = null, ?string $audioCodec = null, ?string $videoCodec = null, ?string $videoResolution = null, ?string $videoFrameRate = null, ?string $videoProfile = null, ?bool $hasVoiceActivity = null, ?GetLibraryItemsOptimizedForStreaming $optimizedForStreaming = null, ?bool $has64bitOffsets = null)
    {
        $this->id = $id;
        $this->container = $container;
        $this->part = $part;
        $this->duration = $duration;
        $this->bitrate = $bitrate;
        $this->width = $width;
        $this->height = $height;
        $this->aspectRatio = $aspectRatio;
        $this->audioProfile = $audioProfile;
        $this->audioChannels = $audioChannels;
        $this->audioCodec = $audioCodec;
        $this->videoCodec = $videoCodec;
        $this->videoResolution = $videoResolution;
        $this->videoFrameRate = $videoFrameRate;
        $this->videoProfile = $videoProfile;
        $this->hasVoiceActivity = $hasVoiceActivity;
        $this->optimizedForStreaming = $optimizedForStreaming;
        $this->has64bitOffsets = $has64bitOffsets;
    }
}