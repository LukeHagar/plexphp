<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


class GetAllLibrariesDirectory
{
    /**
     *
     * @var ?bool $allowSync
     */
    #[\JMS\Serializer\Annotation\SerializedName('allowSync')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $allowSync = null;

    /**
     *
     * @var ?string $art
     */
    #[\JMS\Serializer\Annotation\SerializedName('art')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $art = null;

    /**
     *
     * @var ?string $composite
     */
    #[\JMS\Serializer\Annotation\SerializedName('composite')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $composite = null;

    /**
     *
     * @var ?bool $filters
     */
    #[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $filters = null;

    /**
     *
     * @var ?bool $refreshing
     */
    #[\JMS\Serializer\Annotation\SerializedName('refreshing')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $refreshing = null;

    /**
     *
     * @var ?string $thumb
     */
    #[\JMS\Serializer\Annotation\SerializedName('thumb')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $thumb = null;

    /**
     *
     * @var ?string $key
     */
    #[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $key = null;

    /**
     *
     * @var ?string $type
     */
    #[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $type = null;

    /**
     *
     * @var ?string $title
     */
    #[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $title = null;

    /**
     *
     * @var ?string $agent
     */
    #[\JMS\Serializer\Annotation\SerializedName('agent')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $agent = null;

    /**
     *
     * @var ?string $scanner
     */
    #[\JMS\Serializer\Annotation\SerializedName('scanner')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $scanner = null;

    /**
     *
     * @var ?string $language
     */
    #[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $language = null;

    /**
     *
     * @var ?string $uuid
     */
    #[\JMS\Serializer\Annotation\SerializedName('uuid')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $uuid = null;

    /**
     * Unix epoch datetime
     *
     * @var ?int $updatedAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('updatedAt')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $updatedAt = null;

    /**
     * Unix epoch datetime
     *
     * @var ?int $createdAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $createdAt = null;

    /**
     * Unix epoch datetime
     *
     * @var ?int $scannedAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('scannedAt')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $scannedAt = null;

    /**
     *
     * @var ?bool $content
     */
    #[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $content = null;

    /**
     *
     * @var ?bool $directory
     */
    #[\JMS\Serializer\Annotation\SerializedName('directory')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $directory = null;

    /**
     *
     * @var ?int $contentChangedAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('contentChangedAt')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $contentChangedAt = null;

    /**
     *
     * @var ?int $hidden
     */
    #[\JMS\Serializer\Annotation\SerializedName('hidden')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $hidden = null;

    /**
     * $location
     *
     * @var ?array<Location> $location
     */
    #[\JMS\Serializer\Annotation\SerializedName('Location')]
    #[\JMS\Serializer\Annotation\Type('array<\LukeHagar\Plex_API\Models\Operations\Location>|null')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?array $location = null;

    /**
     * @param  ?bool  $allowSync
     * @param  ?string  $art
     * @param  ?string  $composite
     * @param  ?bool  $filters
     * @param  ?bool  $refreshing
     * @param  ?string  $thumb
     * @param  ?string  $key
     * @param  ?string  $type
     * @param  ?string  $title
     * @param  ?string  $agent
     * @param  ?string  $scanner
     * @param  ?string  $language
     * @param  ?string  $uuid
     * @param  ?int  $updatedAt
     * @param  ?int  $createdAt
     * @param  ?int  $scannedAt
     * @param  ?bool  $content
     * @param  ?bool  $directory
     * @param  ?int  $contentChangedAt
     * @param  ?int  $hidden
     * @param  ?array<Location>  $location
     */
    public function __construct(?bool $allowSync = null, ?string $art = null, ?string $composite = null, ?bool $filters = null, ?bool $refreshing = null, ?string $thumb = null, ?string $key = null, ?string $type = null, ?string $title = null, ?string $agent = null, ?string $scanner = null, ?string $language = null, ?string $uuid = null, ?int $updatedAt = null, ?int $createdAt = null, ?int $scannedAt = null, ?bool $content = null, ?bool $directory = null, ?int $contentChangedAt = null, ?int $hidden = null, ?array $location = null)
    {
        $this->allowSync = $allowSync;
        $this->art = $art;
        $this->composite = $composite;
        $this->filters = $filters;
        $this->refreshing = $refreshing;
        $this->thumb = $thumb;
        $this->key = $key;
        $this->type = $type;
        $this->title = $title;
        $this->agent = $agent;
        $this->scanner = $scanner;
        $this->language = $language;
        $this->uuid = $uuid;
        $this->updatedAt = $updatedAt;
        $this->createdAt = $createdAt;
        $this->scannedAt = $scannedAt;
        $this->content = $content;
        $this->directory = $directory;
        $this->contentChangedAt = $contentChangedAt;
        $this->hidden = $hidden;
        $this->location = $location;
    }
}