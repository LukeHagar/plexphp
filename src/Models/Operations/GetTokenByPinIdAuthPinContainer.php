<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


/** GetTokenByPinIdAuthPinContainer - The Pin with a non-null authToken when it has been verified by the user */
class GetTokenByPinIdAuthPinContainer
{
    /**
     *
     * @var int $id
     */
    #[\JMS\Serializer\Annotation\SerializedName('id')]
    public int $id;

    /**
     *
     * @var string $code
     */
    #[\JMS\Serializer\Annotation\SerializedName('code')]
    public string $code;

    /**
     *
     * @var string $product
     */
    #[\JMS\Serializer\Annotation\SerializedName('product')]
    public string $product;

    /**
     *
     * @var bool $trusted
     */
    #[\JMS\Serializer\Annotation\SerializedName('trusted')]
    public bool $trusted;

    /**
     *
     * @var string $qr
     */
    #[\JMS\Serializer\Annotation\SerializedName('qr')]
    public string $qr;

    /**
     * The X-Client-Identifier used in the request
     *
     * @var string $clientIdentifier
     */
    #[\JMS\Serializer\Annotation\SerializedName('clientIdentifier')]
    public string $clientIdentifier;

    /**
     * Geo location data
     *
     * @var GetTokenByPinIdGeoData $location
     */
    #[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('\LukeHagar\Plex_API\Models\Operations\GetTokenByPinIdGeoData')]
    public GetTokenByPinIdGeoData $location;

    /**
     * The number of seconds this pin expires, by default 900 seconds
     *
     * @var int $expiresIn
     */
    #[\JMS\Serializer\Annotation\SerializedName('expiresIn')]
    public int $expiresIn;

    /**
     *
     * @var \DateTime $createdAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    public \DateTime $createdAt;

    /**
     *
     * @var \DateTime $expiresAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('expiresAt')]
    public \DateTime $expiresAt;

    /**
     *
     * @var ?string $authToken
     */
    #[\JMS\Serializer\Annotation\SerializedName('authToken')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $authToken = null;

    /**
     *
     * @var mixed $newRegistration
     */
    #[\JMS\Serializer\Annotation\SerializedName('newRegistration')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public mixed $newRegistration = null;

    /**
     * @param  int  $id
     * @param  string  $code
     * @param  string  $product
     * @param  bool  $trusted
     * @param  string  $qr
     * @param  string  $clientIdentifier
     * @param  GetTokenByPinIdGeoData  $location
     * @param  int  $expiresIn
     * @param  \DateTime  $createdAt
     * @param  \DateTime  $expiresAt
     * @param  ?string  $authToken
     * @param  mixed  $newRegistration
     */
    public function __construct(int $id, string $code, string $product, bool $trusted, string $qr, string $clientIdentifier, GetTokenByPinIdGeoData $location, int $expiresIn, \DateTime $createdAt, \DateTime $expiresAt, ?string $authToken = null, mixed $newRegistration = null)
    {
        $this->id = $id;
        $this->code = $code;
        $this->product = $product;
        $this->trusted = $trusted;
        $this->qr = $qr;
        $this->clientIdentifier = $clientIdentifier;
        $this->location = $location;
        $this->expiresIn = $expiresIn;
        $this->createdAt = $createdAt;
        $this->expiresAt = $expiresAt;
        $this->authToken = $authToken;
        $this->newRegistration = $newRegistration;
    }
}