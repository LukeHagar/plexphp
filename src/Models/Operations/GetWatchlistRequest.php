<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;

use LukeHagar\Plex_API\Utils\SpeakeasyMetadata;
class GetWatchlistRequest
{
    /**
     * Filter
     *
     * @var \LukeHagar\Plex_API\Models\Operations\Filter $filter
     */
    #[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=filter')]
    public Filter $filter;

    /**
     * In the format "field:dir". Available fields are "watchlistedAt" (Added At),
     *
     * "titleSort" (Title), "originallyAvailableAt" (Release Date), or "rating" (Critic Rating).
     * "dir" can be "asc" or "desc"
     *
     *
     * @var ?string $sort
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;

    /**
     * The type of library to filter. Can be "movie" or "show", or all if not present.
     *
     *
     *
     * @var ?\LukeHagar\Plex_API\Models\Operations\Libtype $libtype
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=libtype')]
    public ?Libtype $libtype = null;

    /**
     * The number of items to return. If not specified, all items will be returned.
     *
     * If the number of items exceeds the limit, the response will be paginated.
     *
     *
     * @var ?int $maxresults
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxresults')]
    public ?int $maxresults = null;

    /**
     * include collections in the results
     *
     *
     *
     * @var ?\LukeHagar\Plex_API\Models\Operations\IncludeCollections $includeCollections
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeCollections')]
    public ?IncludeCollections $includeCollections = null;

    /**
     * include external media in the results
     *
     *
     *
     * @var ?\LukeHagar\Plex_API\Models\Operations\IncludeExternalMedia $includeExternalMedia
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeExternalMedia')]
    public ?IncludeExternalMedia $includeExternalMedia = null;

    /**
     * User Token
     *
     * @var string $xPlexToken
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=X-Plex-Token')]
    public string $xPlexToken;

    /**
     * The index of the first item to return. If not specified, the first item will be returned.
     *
     * If the number of items exceeds the limit, the response will be paginated.
     *
     *
     * @var ?int $xPlexContainerStart
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=X-Plex-Container-Start')]
    public ?int $xPlexContainerStart = null;

    /**
     * The number of items to return. If not specified, all items will be returned.
     *
     * If the number of items exceeds the limit, the response will be paginated.
     *
     *
     * @var ?int $xPlexContainerSize
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=X-Plex-Container-Size')]
    public ?int $xPlexContainerSize = null;

    public function __construct()
    {
        $this->filter = \LukeHagar\Plex_API\Models\Operations\Filter::All;
        $this->sort = null;
        $this->libtype = null;
        $this->maxresults = null;
        $this->includeCollections = null;
        $this->includeExternalMedia = null;
        $this->xPlexToken = '';
        $this->xPlexContainerStart = null;
        $this->xPlexContainerSize = null;
    }
}