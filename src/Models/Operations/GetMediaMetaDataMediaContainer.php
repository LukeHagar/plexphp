<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


class GetMediaMetaDataMediaContainer
{
    /**
     * Number of media items returned in this response.
     *
     * @var int $size
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('size')]
    public int $size;

    /**
     * Indicates whether syncing is allowed.
     *
     * @var bool $allowSync
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('allowSync')]
    public bool $allowSync;

    /**
     * An plugin identifier for the media container.
     *
     * @var string $identifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('identifier')]
    public string $identifier;

    /**
     * The unique identifier for the library section.
     *
     * @var int $librarySectionID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('librarySectionID')]
    public int $librarySectionID;

    /**
     * The title of the library section.
     *
     * @var string $librarySectionTitle
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('librarySectionTitle')]
    public string $librarySectionTitle;

    /**
     * The prefix used for media tag resource paths.
     *
     * @var string $mediaTagPrefix
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mediaTagPrefix')]
    public string $mediaTagPrefix;

    /**
     * The version number for media tags.
     *
     * @var int $mediaTagVersion
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mediaTagVersion')]
    public int $mediaTagVersion;

    /**
     * An array of metadata items.
     *
     * @var array<GetMediaMetaDataMetadata> $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('Metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\LukeHagar\Plex_API\Models\Operations\GetMediaMetaDataMetadata>')]
    public array $metadata;

    /**
     * The universally unique identifier for the library section.
     *
     * @var ?string $librarySectionUUID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('librarySectionUUID')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $librarySectionUUID = null;

    /**
     * @param  int  $size
     * @param  bool  $allowSync
     * @param  string  $identifier
     * @param  int  $librarySectionID
     * @param  string  $librarySectionTitle
     * @param  string  $mediaTagPrefix
     * @param  int  $mediaTagVersion
     * @param  array<GetMediaMetaDataMetadata>  $metadata
     * @param  ?string  $librarySectionUUID
     * @phpstan-pure
     */
    public function __construct(int $size, bool $allowSync, string $identifier, int $librarySectionID, string $librarySectionTitle, string $mediaTagPrefix, int $mediaTagVersion, array $metadata, ?string $librarySectionUUID = null)
    {
        $this->size = $size;
        $this->allowSync = $allowSync;
        $this->identifier = $identifier;
        $this->librarySectionID = $librarySectionID;
        $this->librarySectionTitle = $librarySectionTitle;
        $this->mediaTagPrefix = $mediaTagPrefix;
        $this->mediaTagVersion = $mediaTagVersion;
        $this->metadata = $metadata;
        $this->librarySectionUUID = $librarySectionUUID;
    }
}