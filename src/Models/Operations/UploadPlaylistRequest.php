<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;

use \LukeHagar\Plex_API\Utils\SpeakeasyMetadata;
class UploadPlaylistRequest
{
    /**
     * absolute path to a directory on the server where m3u files are stored, or the absolute path to a playlist file on the server. 
     * 
     * If the `path` argument is a directory, that path will be scanned for playlist files to be processed. 
     * Each file in that directory creates a separate playlist, with a name based on the filename of the file that created it. 
     * The GUID of each playlist is based on the filename. 
     * If the `path` argument is a file, that file will be used to create a new playlist, with the name based on the filename of the file that created it. 
     * The GUID of each playlist is based on the filename.
     * 
     * 
     * @var string $path
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=path')]
    public string $path;
    
    /**
     * Force overwriting of duplicate playlists.  
     * 
     * By default, a playlist file uploaded with the same path will overwrite the existing playlist. 
     * The `force` argument is used to disable overwriting.  
     * If the `force` argument is set to 0, a new playlist will be created suffixed with the date and time that the duplicate was uploaded.
     * 
     * 
     * @var \LukeHagar\Plex_API\Models\Operations\Force $force
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=force')]
    public Force $force;
    
	public function __construct()
	{
		$this->path = "";
		$this->force = \LukeHagar\Plex_API\Models\Operations\Force::Zero;
	}
}
