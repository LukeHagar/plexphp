<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


/** GetPinResponseBody - The Pin */
class GetPinResponseBody
{
    /**
     * PinID for use with authentication
     *
     * @var ?float $id
     */
    #[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $id = null;

    /**
     *
     * @var ?string $code
     */
    #[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;

    /**
     *
     * @var ?string $product
     */
    #[\JMS\Serializer\Annotation\SerializedName('product')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $product = null;

    /**
     *
     * @var ?bool $trusted
     */
    #[\JMS\Serializer\Annotation\SerializedName('trusted')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $trusted = null;

    /**
     * a link to a QR code hosted on plex.tv 
     *
     * The QR code redirects to the relevant `plex.tv/link` authentication page
     * Which then prompts the user for the 4 Digit Link Pin
     *
     *
     * @var ?string $qr
     */
    #[\JMS\Serializer\Annotation\SerializedName('qr')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $qr = null;

    /**
     *
     * @var ?string $clientIdentifier
     */
    #[\JMS\Serializer\Annotation\SerializedName('clientIdentifier')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientIdentifier = null;

    /**
     *
     * @var ?Location $location
     */
    #[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('\LukeHagar\Plex_API\Models\Operations\Location')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Location $location = null;

    /**
     *
     * @var ?float $expiresIn
     */
    #[\JMS\Serializer\Annotation\SerializedName('expiresIn')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $expiresIn = null;

    /**
     *
     * @var ?\DateTime $createdAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;

    /**
     *
     * @var ?\DateTime $expiresAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('expiresAt')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expiresAt = null;

    /**
     *
     * @var ?string $authToken
     */
    #[\JMS\Serializer\Annotation\SerializedName('authToken')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authToken = null;

    /**
     *
     * @var ?bool $newRegistration
     */
    #[\JMS\Serializer\Annotation\SerializedName('newRegistration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $newRegistration = null;

    /**
     * @param  ?float  $id
     * @param  ?string  $code
     * @param  ?string  $product
     * @param  ?bool  $trusted
     * @param  ?string  $qr
     * @param  ?string  $clientIdentifier
     * @param  ?Location  $location
     * @param  ?float  $expiresIn
     * @param  ?\DateTime  $createdAt
     * @param  ?\DateTime  $expiresAt
     * @param  ?string  $authToken
     * @param  ?bool  $newRegistration
     */
    public function __construct(?float $id = null, ?string $code = null, ?string $product = null, ?bool $trusted = null, ?string $qr = null, ?string $clientIdentifier = null, ?Location $location = null, ?float $expiresIn = null, ?\DateTime $createdAt = null, ?\DateTime $expiresAt = null, ?string $authToken = null, ?bool $newRegistration = null)
    {
        $this->id = $id;
        $this->code = $code;
        $this->product = $product;
        $this->trusted = $trusted;
        $this->qr = $qr;
        $this->clientIdentifier = $clientIdentifier;
        $this->location = $location;
        $this->expiresIn = $expiresIn;
        $this->createdAt = $createdAt;
        $this->expiresAt = $expiresAt;
        $this->authToken = $authToken;
        $this->newRegistration = $newRegistration;
    }
}