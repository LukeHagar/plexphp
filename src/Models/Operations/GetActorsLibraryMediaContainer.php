<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


class GetActorsLibraryMediaContainer
{
    /**
     *
     * @var float $size
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('size')]
    public float $size;

    /**
     * Indicates whether syncing is allowed.
     *
     * @var bool $allowSync
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('allowSync')]
    public bool $allowSync;

    /**
     * URL for the background artwork of the media container.
     *
     * @var string $art
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('art')]
    public string $art;

    /**
     * An plugin identifier for the media container.
     *
     * @var string $identifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('identifier')]
    public string $identifier;

    /**
     * The prefix used for media tag resource paths.
     *
     * @var string $mediaTagPrefix
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mediaTagPrefix')]
    public string $mediaTagPrefix;

    /**
     * The version number for media tags.
     *
     * @var int $mediaTagVersion
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mediaTagVersion')]
    public int $mediaTagVersion;

    /**
     * Specifies whether caching is disabled.
     *
     * @var bool $nocache
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('nocache')]
    public bool $nocache;

    /**
     * URL for the thumbnail image of the media container.
     *
     * @var string $thumb
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('thumb')]
    public string $thumb;

    /**
     * The primary title of the media container.
     *
     * @var string $title1
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('title1')]
    public string $title1;

    /**
     * The secondary title of the media container.
     *
     * @var string $title2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('title2')]
    public string $title2;

    /**
     * Identifier for the view group layout.
     *
     * @var string $viewGroup
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('viewGroup')]
    public string $viewGroup;

    /**
     * Identifier for the view mode.
     *
     * @var string $viewMode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('viewMode')]
    public string $viewMode;

    /**
     * An array of actor entries for media items.
     *
     * @var ?array<GetActorsLibraryDirectory> $directory
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('Directory')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\LukeHagar\Plex_API\Models\Operations\GetActorsLibraryDirectory>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $directory = null;

    /**
     * @param  float  $size
     * @param  bool  $allowSync
     * @param  string  $art
     * @param  string  $identifier
     * @param  string  $mediaTagPrefix
     * @param  int  $mediaTagVersion
     * @param  bool  $nocache
     * @param  string  $thumb
     * @param  string  $title1
     * @param  string  $title2
     * @param  string  $viewGroup
     * @param  string  $viewMode
     * @param  ?array<GetActorsLibraryDirectory>  $directory
     * @phpstan-pure
     */
    public function __construct(float $size, bool $allowSync, string $art, string $identifier, string $mediaTagPrefix, int $mediaTagVersion, bool $nocache, string $thumb, string $title1, string $title2, string $viewGroup, string $viewMode, ?array $directory = null)
    {
        $this->size = $size;
        $this->allowSync = $allowSync;
        $this->art = $art;
        $this->identifier = $identifier;
        $this->mediaTagPrefix = $mediaTagPrefix;
        $this->mediaTagVersion = $mediaTagVersion;
        $this->nocache = $nocache;
        $this->thumb = $thumb;
        $this->title1 = $title1;
        $this->title2 = $title2;
        $this->viewGroup = $viewGroup;
        $this->viewMode = $viewMode;
        $this->directory = $directory;
    }
}