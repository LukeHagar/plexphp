<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


class GetMediaMetaDataMedia
{
    /**
     * Unique media identifier.
     *
     * @var int $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public int $id;

    /**
     * Duration of the media in milliseconds.
     *
     * @var int $duration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duration')]
    public int $duration;

    /**
     * Bitrate in bits per second.
     *
     * @var int $bitrate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('bitrate')]
    public int $bitrate;

    /**
     * Video width in pixels.
     *
     * @var int $width
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('width')]
    public int $width;

    /**
     * Video height in pixels.
     *
     * @var int $height
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('height')]
    public int $height;

    /**
     * Aspect ratio of the video.
     *
     * @var float $aspectRatio
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('aspectRatio')]
    public float $aspectRatio;

    /**
     * Number of audio channels.
     *
     * @var int $audioChannels
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('audioChannels')]
    public int $audioChannels;

    /**
     * Audio codec used.
     *
     * @var string $audioCodec
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('audioCodec')]
    public string $audioCodec;

    /**
     * Video codec used.
     *
     * @var string $videoCodec
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('videoCodec')]
    public string $videoCodec;

    /**
     * Video resolution (e.g., 4k).
     *
     * @var string $videoResolution
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('videoResolution')]
    public string $videoResolution;

    /**
     * File container type.
     *
     * @var string $container
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('container')]
    public string $container;

    /**
     * Frame rate of the video (e.g., 24p).
     *
     * @var string $videoFrameRate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('videoFrameRate')]
    public string $videoFrameRate;

    /**
     * Video profile (e.g., main 10).
     *
     * @var string $videoProfile
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('videoProfile')]
    public string $videoProfile;

    /**
     * Indicates whether voice activity is detected.
     *
     * @var bool $hasVoiceActivity
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('hasVoiceActivity')]
    public bool $hasVoiceActivity;

    /**
     * An array of parts for this media item.
     *
     * @var array<GetMediaMetaDataPart> $part
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('Part')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\LukeHagar\Plex_API\Models\Operations\GetMediaMetaDataPart>')]
    public array $part;

    /**
     * @param  int  $id
     * @param  int  $duration
     * @param  int  $bitrate
     * @param  int  $width
     * @param  int  $height
     * @param  float  $aspectRatio
     * @param  int  $audioChannels
     * @param  string  $audioCodec
     * @param  string  $videoCodec
     * @param  string  $videoResolution
     * @param  string  $container
     * @param  string  $videoFrameRate
     * @param  string  $videoProfile
     * @param  bool  $hasVoiceActivity
     * @param  array<GetMediaMetaDataPart>  $part
     * @phpstan-pure
     */
    public function __construct(int $id, int $duration, int $bitrate, int $width, int $height, float $aspectRatio, int $audioChannels, string $audioCodec, string $videoCodec, string $videoResolution, string $container, string $videoFrameRate, string $videoProfile, bool $hasVoiceActivity, array $part)
    {
        $this->id = $id;
        $this->duration = $duration;
        $this->bitrate = $bitrate;
        $this->width = $width;
        $this->height = $height;
        $this->aspectRatio = $aspectRatio;
        $this->audioChannels = $audioChannels;
        $this->audioCodec = $audioCodec;
        $this->videoCodec = $videoCodec;
        $this->videoResolution = $videoResolution;
        $this->container = $container;
        $this->videoFrameRate = $videoFrameRate;
        $this->videoProfile = $videoProfile;
        $this->hasVoiceActivity = $hasVoiceActivity;
        $this->part = $part;
    }
}