<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Operations;


class MyPlex
{
    /**
     *
     * @var ?string $authToken
     */
    #[\JMS\Serializer\Annotation\SerializedName('authToken')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $authToken = null;

    /**
     *
     * @var ?string $username
     */
    #[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $username = null;

    /**
     *
     * @var ?string $mappingState
     */
    #[\JMS\Serializer\Annotation\SerializedName('mappingState')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $mappingState = null;

    /**
     *
     * @var ?string $mappingError
     */
    #[\JMS\Serializer\Annotation\SerializedName('mappingError')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $mappingError = null;

    /**
     *
     * @var ?string $signInState
     */
    #[\JMS\Serializer\Annotation\SerializedName('signInState')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $signInState = null;

    /**
     *
     * @var ?string $publicAddress
     */
    #[\JMS\Serializer\Annotation\SerializedName('publicAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $publicAddress = null;

    /**
     *
     * @var ?float $publicPort
     */
    #[\JMS\Serializer\Annotation\SerializedName('publicPort')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?float $publicPort = null;

    /**
     *
     * @var ?string $privateAddress
     */
    #[\JMS\Serializer\Annotation\SerializedName('privateAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $privateAddress = null;

    /**
     *
     * @var ?float $privatePort
     */
    #[\JMS\Serializer\Annotation\SerializedName('privatePort')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?float $privatePort = null;

    /**
     *
     * @var ?string $subscriptionFeatures
     */
    #[\JMS\Serializer\Annotation\SerializedName('subscriptionFeatures')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $subscriptionFeatures = null;

    /**
     *
     * @var ?bool $subscriptionActive
     */
    #[\JMS\Serializer\Annotation\SerializedName('subscriptionActive')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?bool $subscriptionActive = null;

    /**
     *
     * @var ?string $subscriptionState
     */
    #[\JMS\Serializer\Annotation\SerializedName('subscriptionState')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $subscriptionState = null;

    /**
     * @param  ?string  $authToken
     * @param  ?string  $username
     * @param  ?string  $mappingState
     * @param  ?string  $mappingError
     * @param  ?string  $signInState
     * @param  ?string  $publicAddress
     * @param  ?float  $publicPort
     * @param  ?string  $privateAddress
     * @param  ?float  $privatePort
     * @param  ?string  $subscriptionFeatures
     * @param  ?bool  $subscriptionActive
     * @param  ?string  $subscriptionState
     */
    public function __construct(?string $authToken = null, ?string $username = null, ?string $mappingState = null, ?string $mappingError = null, ?string $signInState = null, ?string $publicAddress = null, ?float $publicPort = null, ?string $privateAddress = null, ?float $privatePort = null, ?string $subscriptionFeatures = null, ?bool $subscriptionActive = null, ?string $subscriptionState = null)
    {
        $this->authToken = $authToken;
        $this->username = $username;
        $this->mappingState = $mappingState;
        $this->mappingError = $mappingError;
        $this->signInState = $signInState;
        $this->publicAddress = $publicAddress;
        $this->publicPort = $publicPort;
        $this->privateAddress = $privateAddress;
        $this->privatePort = $privatePort;
        $this->subscriptionFeatures = $subscriptionFeatures;
        $this->subscriptionActive = $subscriptionActive;
        $this->subscriptionState = $subscriptionState;
    }
}