<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace LukeHagar\Plex_API\Models\Errors;



/** GetServerIdentityRequestTimeout - Request Timeout */
class GetServerIdentityRequestTimeout
{
    /**
     *
     * @var ?int $code
     */
    #[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?int $code = null;

    /**
     *
     * @var ?string $message
     */
    #[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\SkipWhenNull]
    public ?string $message = null;

    /**
     * Raw HTTP response; suitable for custom response parsing
     *
     * @var ?\Psr\Http\Message\ResponseInterface $rawResponse
     */
    #[\JMS\Serializer\Annotation\Exclude]

    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;

    /**
     * @param  ?int  $code
     * @param  ?string  $message
     * @param  ?\Psr\Http\Message\ResponseInterface  $rawResponse
     */
    public function __construct(?int $code = null, ?string $message = null, ?\Psr\Http\Message\ResponseInterface $rawResponse = null)
    {
        $this->code = $code;
        $this->message = $message;
        $this->rawResponse = $rawResponse;
    }

    public function toException(): GetServerIdentityRequestTimeoutThrowable
    {
        if ($this->message !== null) {
            $message = $this->message;
        } else {
            $message = 'unknown error';
        }
        if ($this->code !== null) {
            $code = $this->code;
        } else {
            $code = -1;
        }

        return new GetServerIdentityRequestTimeoutThrowable($message, (int) $code, $this);
    }
}